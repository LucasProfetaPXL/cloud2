# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  BACKEND_IMAGE: "12301302/cloud2_backend:latest"
  FRONTEND_IMAGE: "12301302/cloud2_frontend:latest"
jobs:
  frontend:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: metadata docker
      id: meta
      uses: docker/metadata-action@v5
      with: 
        images: ${{env.FRONTEND_IMAGE}}
    - name: dockerlogin         
      uses: docker/login-action@v5
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: build an dpush docker
      uses: docker/build-push-action@v6
      with:
        context: ./frontend
        push: true
        tags: ${{env.FRONTEND_IMAGE}}
        annotations: ${{steps.meta.outputs.annotations}}
  backend:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [18.x]
      steps:
      - uses: actions/checkout@v4
      - name: metadata docker
        id: meta
        uses: docker/metadata-action@v5
        with: 
          images: ${{env.BACKEND_IMAGE}}
      - name: dockerlogin         
        uses: docker/login-action@v5
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: build an dpush docker
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{env.FRONTEND_IMAGE}}
          annotations: ${{steps.meta.outputs.annotations}}
  infrastructure:
      runs-on: ubuntu-latest
      env:
          TF_INPUT: "false"
          TF_LOG: "INFO"
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
      strategy:
        matrix:
          node-version: [18.x]
      steps:
      - uses: actions/checkout@v4
      - name: login into aws
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with: 
            terraform_version: 1.9.5
      - name: initialize project
        working-directory: ./infra
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
        